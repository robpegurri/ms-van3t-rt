// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: carla.proto
// Original file comments:
//
// Copyright (C) 2023 Tobias Hardes <tobias.hardes@uni-paderborn.de>
//
// Documentation for these modules is at http://veins.car2x.org/
//
// SPDX-License-Identifier: GPL-2.0-or-later
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
#ifndef GRPC_carla_2eproto__INCLUDED
#define GRPC_carla_2eproto__INCLUDED

#include "carla.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace carla {

class CarlaAdapter final {
 public:
  static constexpr char const* service_full_name() {
    return "carla.CarlaAdapter";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status ExecuteOneTimeStep(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::carla::Boolean* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Boolean>> AsyncExecuteOneTimeStep(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Boolean>>(AsyncExecuteOneTimeStepRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Boolean>> PrepareAsyncExecuteOneTimeStep(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Boolean>>(PrepareAsyncExecuteOneTimeStepRaw(context, request, cq));
    }
    virtual ::grpc::Status Finish(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncFinish(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncFinishRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncFinish(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncFinishRaw(context, request, cq));
    }
    virtual ::grpc::Status GetManagedActorsIds(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::carla::ActorIds* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::ActorIds>> AsyncGetManagedActorsIds(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::ActorIds>>(AsyncGetManagedActorsIdsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::ActorIds>> PrepareAsyncGetManagedActorsIds(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::ActorIds>>(PrepareAsyncGetManagedActorsIdsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetManagedCAVsIds(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::carla::ActorIds* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::ActorIds>> AsyncGetManagedCAVsIds(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::ActorIds>>(AsyncGetManagedCAVsIdsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::ActorIds>> PrepareAsyncGetManagedCAVsIds(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::ActorIds>>(PrepareAsyncGetManagedCAVsIdsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetManagedActorById(::grpc::ClientContext* context, const ::carla::Number& request, ::carla::Vehicle* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Vehicle>> AsyncGetManagedActorById(::grpc::ClientContext* context, const ::carla::Number& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Vehicle>>(AsyncGetManagedActorByIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Vehicle>> PrepareAsyncGetManagedActorById(::grpc::ClientContext* context, const ::carla::Number& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Vehicle>>(PrepareAsyncGetManagedActorByIdRaw(context, request, cq));
    }
    virtual ::grpc::Status InsertVehicle(::grpc::ClientContext* context, const ::carla::Vehicle& request, ::carla::Number* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Number>> AsyncInsertVehicle(::grpc::ClientContext* context, const ::carla::Vehicle& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Number>>(AsyncInsertVehicleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Number>> PrepareAsyncInsertVehicle(::grpc::ClientContext* context, const ::carla::Vehicle& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Number>>(PrepareAsyncInsertVehicleRaw(context, request, cq));
    }
    virtual ::grpc::Status GetRandomSpawnPoint(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::carla::Transform* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Transform>> AsyncGetRandomSpawnPoint(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Transform>>(AsyncGetRandomSpawnPointRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Transform>> PrepareAsyncGetRandomSpawnPoint(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Transform>>(PrepareAsyncGetRandomSpawnPointRaw(context, request, cq));
    }
    virtual ::grpc::Status GetActorLDM(::grpc::ClientContext* context, const ::carla::Number& request, ::carla::Objects* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Objects>> AsyncGetActorLDM(::grpc::ClientContext* context, const ::carla::Number& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Objects>>(AsyncGetActorLDMRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Objects>> PrepareAsyncGetActorLDM(::grpc::ClientContext* context, const ::carla::Number& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Objects>>(PrepareAsyncGetActorLDMRaw(context, request, cq));
    }
    virtual ::grpc::Status InsertObject(::grpc::ClientContext* context, const ::carla::ObjectIn& request, ::carla::Number* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Number>> AsyncInsertObject(::grpc::ClientContext* context, const ::carla::ObjectIn& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Number>>(AsyncInsertObjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Number>> PrepareAsyncInsertObject(::grpc::ClientContext* context, const ::carla::ObjectIn& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Number>>(PrepareAsyncInsertObjectRaw(context, request, cq));
    }
    virtual ::grpc::Status GetCartesian(::grpc::ClientContext* context, const ::carla::Vector& request, ::carla::Vector* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Vector>> AsyncGetCartesian(::grpc::ClientContext* context, const ::carla::Vector& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Vector>>(AsyncGetCartesianRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Vector>> PrepareAsyncGetCartesian(::grpc::ClientContext* context, const ::carla::Vector& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Vector>>(PrepareAsyncGetCartesianRaw(context, request, cq));
    }
    virtual ::grpc::Status GetGeo(::grpc::ClientContext* context, const ::carla::Vector& request, ::carla::Vector* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Vector>> AsyncGetGeo(::grpc::ClientContext* context, const ::carla::Vector& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Vector>>(AsyncGetGeoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Vector>> PrepareAsyncGetGeo(::grpc::ClientContext* context, const ::carla::Vector& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Vector>>(PrepareAsyncGetGeoRaw(context, request, cq));
    }
    virtual ::grpc::Status hasLDM(::grpc::ClientContext* context, const ::carla::Number& request, ::carla::Boolean* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Boolean>> AsynchasLDM(::grpc::ClientContext* context, const ::carla::Number& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Boolean>>(AsynchasLDMRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Boolean>> PrepareAsynchasLDM(::grpc::ClientContext* context, const ::carla::Number& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::carla::Boolean>>(PrepareAsynchasLDMRaw(context, request, cq));
    }
    virtual ::grpc::Status SetControl(::grpc::ClientContext* context, const ::carla::Control& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetControl(::grpc::ClientContext* context, const ::carla::Control& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetControl(::grpc::ClientContext* context, const ::carla::Control& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetControlRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void ExecuteOneTimeStep(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::carla::Boolean* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExecuteOneTimeStep(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::carla::Boolean* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Finish(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Finish(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetManagedActorsIds(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::carla::ActorIds* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetManagedActorsIds(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::carla::ActorIds* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetManagedCAVsIds(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::carla::ActorIds* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetManagedCAVsIds(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::carla::ActorIds* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetManagedActorById(::grpc::ClientContext* context, const ::carla::Number* request, ::carla::Vehicle* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetManagedActorById(::grpc::ClientContext* context, const ::carla::Number* request, ::carla::Vehicle* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void InsertVehicle(::grpc::ClientContext* context, const ::carla::Vehicle* request, ::carla::Number* response, std::function<void(::grpc::Status)>) = 0;
      virtual void InsertVehicle(::grpc::ClientContext* context, const ::carla::Vehicle* request, ::carla::Number* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetRandomSpawnPoint(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::carla::Transform* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetRandomSpawnPoint(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::carla::Transform* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetActorLDM(::grpc::ClientContext* context, const ::carla::Number* request, ::carla::Objects* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetActorLDM(::grpc::ClientContext* context, const ::carla::Number* request, ::carla::Objects* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void InsertObject(::grpc::ClientContext* context, const ::carla::ObjectIn* request, ::carla::Number* response, std::function<void(::grpc::Status)>) = 0;
      virtual void InsertObject(::grpc::ClientContext* context, const ::carla::ObjectIn* request, ::carla::Number* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetCartesian(::grpc::ClientContext* context, const ::carla::Vector* request, ::carla::Vector* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetCartesian(::grpc::ClientContext* context, const ::carla::Vector* request, ::carla::Vector* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetGeo(::grpc::ClientContext* context, const ::carla::Vector* request, ::carla::Vector* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetGeo(::grpc::ClientContext* context, const ::carla::Vector* request, ::carla::Vector* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void hasLDM(::grpc::ClientContext* context, const ::carla::Number* request, ::carla::Boolean* response, std::function<void(::grpc::Status)>) = 0;
      virtual void hasLDM(::grpc::ClientContext* context, const ::carla::Number* request, ::carla::Boolean* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetControl(::grpc::ClientContext* context, const ::carla::Control* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetControl(::grpc::ClientContext* context, const ::carla::Control* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::carla::Boolean>* AsyncExecuteOneTimeStepRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::carla::Boolean>* PrepareAsyncExecuteOneTimeStepRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncFinishRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncFinishRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::carla::ActorIds>* AsyncGetManagedActorsIdsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::carla::ActorIds>* PrepareAsyncGetManagedActorsIdsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::carla::ActorIds>* AsyncGetManagedCAVsIdsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::carla::ActorIds>* PrepareAsyncGetManagedCAVsIdsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::carla::Vehicle>* AsyncGetManagedActorByIdRaw(::grpc::ClientContext* context, const ::carla::Number& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::carla::Vehicle>* PrepareAsyncGetManagedActorByIdRaw(::grpc::ClientContext* context, const ::carla::Number& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::carla::Number>* AsyncInsertVehicleRaw(::grpc::ClientContext* context, const ::carla::Vehicle& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::carla::Number>* PrepareAsyncInsertVehicleRaw(::grpc::ClientContext* context, const ::carla::Vehicle& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::carla::Transform>* AsyncGetRandomSpawnPointRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::carla::Transform>* PrepareAsyncGetRandomSpawnPointRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::carla::Objects>* AsyncGetActorLDMRaw(::grpc::ClientContext* context, const ::carla::Number& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::carla::Objects>* PrepareAsyncGetActorLDMRaw(::grpc::ClientContext* context, const ::carla::Number& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::carla::Number>* AsyncInsertObjectRaw(::grpc::ClientContext* context, const ::carla::ObjectIn& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::carla::Number>* PrepareAsyncInsertObjectRaw(::grpc::ClientContext* context, const ::carla::ObjectIn& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::carla::Vector>* AsyncGetCartesianRaw(::grpc::ClientContext* context, const ::carla::Vector& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::carla::Vector>* PrepareAsyncGetCartesianRaw(::grpc::ClientContext* context, const ::carla::Vector& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::carla::Vector>* AsyncGetGeoRaw(::grpc::ClientContext* context, const ::carla::Vector& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::carla::Vector>* PrepareAsyncGetGeoRaw(::grpc::ClientContext* context, const ::carla::Vector& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::carla::Boolean>* AsynchasLDMRaw(::grpc::ClientContext* context, const ::carla::Number& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::carla::Boolean>* PrepareAsynchasLDMRaw(::grpc::ClientContext* context, const ::carla::Number& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetControlRaw(::grpc::ClientContext* context, const ::carla::Control& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetControlRaw(::grpc::ClientContext* context, const ::carla::Control& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status ExecuteOneTimeStep(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::carla::Boolean* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Boolean>> AsyncExecuteOneTimeStep(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Boolean>>(AsyncExecuteOneTimeStepRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Boolean>> PrepareAsyncExecuteOneTimeStep(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Boolean>>(PrepareAsyncExecuteOneTimeStepRaw(context, request, cq));
    }
    ::grpc::Status Finish(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncFinish(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncFinishRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncFinish(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncFinishRaw(context, request, cq));
    }
    ::grpc::Status GetManagedActorsIds(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::carla::ActorIds* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::ActorIds>> AsyncGetManagedActorsIds(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::ActorIds>>(AsyncGetManagedActorsIdsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::ActorIds>> PrepareAsyncGetManagedActorsIds(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::ActorIds>>(PrepareAsyncGetManagedActorsIdsRaw(context, request, cq));
    }
    ::grpc::Status GetManagedCAVsIds(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::carla::ActorIds* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::ActorIds>> AsyncGetManagedCAVsIds(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::ActorIds>>(AsyncGetManagedCAVsIdsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::ActorIds>> PrepareAsyncGetManagedCAVsIds(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::ActorIds>>(PrepareAsyncGetManagedCAVsIdsRaw(context, request, cq));
    }
    ::grpc::Status GetManagedActorById(::grpc::ClientContext* context, const ::carla::Number& request, ::carla::Vehicle* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Vehicle>> AsyncGetManagedActorById(::grpc::ClientContext* context, const ::carla::Number& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Vehicle>>(AsyncGetManagedActorByIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Vehicle>> PrepareAsyncGetManagedActorById(::grpc::ClientContext* context, const ::carla::Number& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Vehicle>>(PrepareAsyncGetManagedActorByIdRaw(context, request, cq));
    }
    ::grpc::Status InsertVehicle(::grpc::ClientContext* context, const ::carla::Vehicle& request, ::carla::Number* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Number>> AsyncInsertVehicle(::grpc::ClientContext* context, const ::carla::Vehicle& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Number>>(AsyncInsertVehicleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Number>> PrepareAsyncInsertVehicle(::grpc::ClientContext* context, const ::carla::Vehicle& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Number>>(PrepareAsyncInsertVehicleRaw(context, request, cq));
    }
    ::grpc::Status GetRandomSpawnPoint(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::carla::Transform* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Transform>> AsyncGetRandomSpawnPoint(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Transform>>(AsyncGetRandomSpawnPointRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Transform>> PrepareAsyncGetRandomSpawnPoint(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Transform>>(PrepareAsyncGetRandomSpawnPointRaw(context, request, cq));
    }
    ::grpc::Status GetActorLDM(::grpc::ClientContext* context, const ::carla::Number& request, ::carla::Objects* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Objects>> AsyncGetActorLDM(::grpc::ClientContext* context, const ::carla::Number& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Objects>>(AsyncGetActorLDMRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Objects>> PrepareAsyncGetActorLDM(::grpc::ClientContext* context, const ::carla::Number& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Objects>>(PrepareAsyncGetActorLDMRaw(context, request, cq));
    }
    ::grpc::Status InsertObject(::grpc::ClientContext* context, const ::carla::ObjectIn& request, ::carla::Number* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Number>> AsyncInsertObject(::grpc::ClientContext* context, const ::carla::ObjectIn& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Number>>(AsyncInsertObjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Number>> PrepareAsyncInsertObject(::grpc::ClientContext* context, const ::carla::ObjectIn& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Number>>(PrepareAsyncInsertObjectRaw(context, request, cq));
    }
    ::grpc::Status GetCartesian(::grpc::ClientContext* context, const ::carla::Vector& request, ::carla::Vector* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Vector>> AsyncGetCartesian(::grpc::ClientContext* context, const ::carla::Vector& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Vector>>(AsyncGetCartesianRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Vector>> PrepareAsyncGetCartesian(::grpc::ClientContext* context, const ::carla::Vector& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Vector>>(PrepareAsyncGetCartesianRaw(context, request, cq));
    }
    ::grpc::Status GetGeo(::grpc::ClientContext* context, const ::carla::Vector& request, ::carla::Vector* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Vector>> AsyncGetGeo(::grpc::ClientContext* context, const ::carla::Vector& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Vector>>(AsyncGetGeoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Vector>> PrepareAsyncGetGeo(::grpc::ClientContext* context, const ::carla::Vector& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Vector>>(PrepareAsyncGetGeoRaw(context, request, cq));
    }
    ::grpc::Status hasLDM(::grpc::ClientContext* context, const ::carla::Number& request, ::carla::Boolean* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Boolean>> AsynchasLDM(::grpc::ClientContext* context, const ::carla::Number& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Boolean>>(AsynchasLDMRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Boolean>> PrepareAsynchasLDM(::grpc::ClientContext* context, const ::carla::Number& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::carla::Boolean>>(PrepareAsynchasLDMRaw(context, request, cq));
    }
    ::grpc::Status SetControl(::grpc::ClientContext* context, const ::carla::Control& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetControl(::grpc::ClientContext* context, const ::carla::Control& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetControl(::grpc::ClientContext* context, const ::carla::Control& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetControlRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void ExecuteOneTimeStep(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::carla::Boolean* response, std::function<void(::grpc::Status)>) override;
      void ExecuteOneTimeStep(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::carla::Boolean* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Finish(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void Finish(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetManagedActorsIds(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::carla::ActorIds* response, std::function<void(::grpc::Status)>) override;
      void GetManagedActorsIds(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::carla::ActorIds* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetManagedCAVsIds(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::carla::ActorIds* response, std::function<void(::grpc::Status)>) override;
      void GetManagedCAVsIds(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::carla::ActorIds* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetManagedActorById(::grpc::ClientContext* context, const ::carla::Number* request, ::carla::Vehicle* response, std::function<void(::grpc::Status)>) override;
      void GetManagedActorById(::grpc::ClientContext* context, const ::carla::Number* request, ::carla::Vehicle* response, ::grpc::ClientUnaryReactor* reactor) override;
      void InsertVehicle(::grpc::ClientContext* context, const ::carla::Vehicle* request, ::carla::Number* response, std::function<void(::grpc::Status)>) override;
      void InsertVehicle(::grpc::ClientContext* context, const ::carla::Vehicle* request, ::carla::Number* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetRandomSpawnPoint(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::carla::Transform* response, std::function<void(::grpc::Status)>) override;
      void GetRandomSpawnPoint(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::carla::Transform* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetActorLDM(::grpc::ClientContext* context, const ::carla::Number* request, ::carla::Objects* response, std::function<void(::grpc::Status)>) override;
      void GetActorLDM(::grpc::ClientContext* context, const ::carla::Number* request, ::carla::Objects* response, ::grpc::ClientUnaryReactor* reactor) override;
      void InsertObject(::grpc::ClientContext* context, const ::carla::ObjectIn* request, ::carla::Number* response, std::function<void(::grpc::Status)>) override;
      void InsertObject(::grpc::ClientContext* context, const ::carla::ObjectIn* request, ::carla::Number* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetCartesian(::grpc::ClientContext* context, const ::carla::Vector* request, ::carla::Vector* response, std::function<void(::grpc::Status)>) override;
      void GetCartesian(::grpc::ClientContext* context, const ::carla::Vector* request, ::carla::Vector* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetGeo(::grpc::ClientContext* context, const ::carla::Vector* request, ::carla::Vector* response, std::function<void(::grpc::Status)>) override;
      void GetGeo(::grpc::ClientContext* context, const ::carla::Vector* request, ::carla::Vector* response, ::grpc::ClientUnaryReactor* reactor) override;
      void hasLDM(::grpc::ClientContext* context, const ::carla::Number* request, ::carla::Boolean* response, std::function<void(::grpc::Status)>) override;
      void hasLDM(::grpc::ClientContext* context, const ::carla::Number* request, ::carla::Boolean* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetControl(::grpc::ClientContext* context, const ::carla::Control* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetControl(::grpc::ClientContext* context, const ::carla::Control* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::carla::Boolean>* AsyncExecuteOneTimeStepRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::carla::Boolean>* PrepareAsyncExecuteOneTimeStepRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncFinishRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncFinishRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::carla::ActorIds>* AsyncGetManagedActorsIdsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::carla::ActorIds>* PrepareAsyncGetManagedActorsIdsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::carla::ActorIds>* AsyncGetManagedCAVsIdsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::carla::ActorIds>* PrepareAsyncGetManagedCAVsIdsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::carla::Vehicle>* AsyncGetManagedActorByIdRaw(::grpc::ClientContext* context, const ::carla::Number& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::carla::Vehicle>* PrepareAsyncGetManagedActorByIdRaw(::grpc::ClientContext* context, const ::carla::Number& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::carla::Number>* AsyncInsertVehicleRaw(::grpc::ClientContext* context, const ::carla::Vehicle& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::carla::Number>* PrepareAsyncInsertVehicleRaw(::grpc::ClientContext* context, const ::carla::Vehicle& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::carla::Transform>* AsyncGetRandomSpawnPointRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::carla::Transform>* PrepareAsyncGetRandomSpawnPointRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::carla::Objects>* AsyncGetActorLDMRaw(::grpc::ClientContext* context, const ::carla::Number& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::carla::Objects>* PrepareAsyncGetActorLDMRaw(::grpc::ClientContext* context, const ::carla::Number& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::carla::Number>* AsyncInsertObjectRaw(::grpc::ClientContext* context, const ::carla::ObjectIn& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::carla::Number>* PrepareAsyncInsertObjectRaw(::grpc::ClientContext* context, const ::carla::ObjectIn& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::carla::Vector>* AsyncGetCartesianRaw(::grpc::ClientContext* context, const ::carla::Vector& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::carla::Vector>* PrepareAsyncGetCartesianRaw(::grpc::ClientContext* context, const ::carla::Vector& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::carla::Vector>* AsyncGetGeoRaw(::grpc::ClientContext* context, const ::carla::Vector& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::carla::Vector>* PrepareAsyncGetGeoRaw(::grpc::ClientContext* context, const ::carla::Vector& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::carla::Boolean>* AsynchasLDMRaw(::grpc::ClientContext* context, const ::carla::Number& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::carla::Boolean>* PrepareAsynchasLDMRaw(::grpc::ClientContext* context, const ::carla::Number& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetControlRaw(::grpc::ClientContext* context, const ::carla::Control& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetControlRaw(::grpc::ClientContext* context, const ::carla::Control& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_ExecuteOneTimeStep_;
    const ::grpc::internal::RpcMethod rpcmethod_Finish_;
    const ::grpc::internal::RpcMethod rpcmethod_GetManagedActorsIds_;
    const ::grpc::internal::RpcMethod rpcmethod_GetManagedCAVsIds_;
    const ::grpc::internal::RpcMethod rpcmethod_GetManagedActorById_;
    const ::grpc::internal::RpcMethod rpcmethod_InsertVehicle_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRandomSpawnPoint_;
    const ::grpc::internal::RpcMethod rpcmethod_GetActorLDM_;
    const ::grpc::internal::RpcMethod rpcmethod_InsertObject_;
    const ::grpc::internal::RpcMethod rpcmethod_GetCartesian_;
    const ::grpc::internal::RpcMethod rpcmethod_GetGeo_;
    const ::grpc::internal::RpcMethod rpcmethod_hasLDM_;
    const ::grpc::internal::RpcMethod rpcmethod_SetControl_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status ExecuteOneTimeStep(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::carla::Boolean* response);
    virtual ::grpc::Status Finish(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status GetManagedActorsIds(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::carla::ActorIds* response);
    virtual ::grpc::Status GetManagedCAVsIds(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::carla::ActorIds* response);
    virtual ::grpc::Status GetManagedActorById(::grpc::ServerContext* context, const ::carla::Number* request, ::carla::Vehicle* response);
    virtual ::grpc::Status InsertVehicle(::grpc::ServerContext* context, const ::carla::Vehicle* request, ::carla::Number* response);
    virtual ::grpc::Status GetRandomSpawnPoint(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::carla::Transform* response);
    virtual ::grpc::Status GetActorLDM(::grpc::ServerContext* context, const ::carla::Number* request, ::carla::Objects* response);
    virtual ::grpc::Status InsertObject(::grpc::ServerContext* context, const ::carla::ObjectIn* request, ::carla::Number* response);
    virtual ::grpc::Status GetCartesian(::grpc::ServerContext* context, const ::carla::Vector* request, ::carla::Vector* response);
    virtual ::grpc::Status GetGeo(::grpc::ServerContext* context, const ::carla::Vector* request, ::carla::Vector* response);
    virtual ::grpc::Status hasLDM(::grpc::ServerContext* context, const ::carla::Number* request, ::carla::Boolean* response);
    virtual ::grpc::Status SetControl(::grpc::ServerContext* context, const ::carla::Control* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_ExecuteOneTimeStep : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExecuteOneTimeStep() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_ExecuteOneTimeStep() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteOneTimeStep(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::carla::Boolean* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteOneTimeStep(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::carla::Boolean>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Finish : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Finish() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_Finish() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Finish(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFinish(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetManagedActorsIds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetManagedActorsIds() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetManagedActorsIds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetManagedActorsIds(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::carla::ActorIds* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetManagedActorsIds(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::carla::ActorIds>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetManagedCAVsIds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetManagedCAVsIds() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_GetManagedCAVsIds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetManagedCAVsIds(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::carla::ActorIds* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetManagedCAVsIds(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::carla::ActorIds>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetManagedActorById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetManagedActorById() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_GetManagedActorById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetManagedActorById(::grpc::ServerContext* /*context*/, const ::carla::Number* /*request*/, ::carla::Vehicle* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetManagedActorById(::grpc::ServerContext* context, ::carla::Number* request, ::grpc::ServerAsyncResponseWriter< ::carla::Vehicle>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_InsertVehicle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_InsertVehicle() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_InsertVehicle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertVehicle(::grpc::ServerContext* /*context*/, const ::carla::Vehicle* /*request*/, ::carla::Number* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInsertVehicle(::grpc::ServerContext* context, ::carla::Vehicle* request, ::grpc::ServerAsyncResponseWriter< ::carla::Number>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRandomSpawnPoint : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetRandomSpawnPoint() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_GetRandomSpawnPoint() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRandomSpawnPoint(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::carla::Transform* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRandomSpawnPoint(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::carla::Transform>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetActorLDM : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetActorLDM() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_GetActorLDM() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActorLDM(::grpc::ServerContext* /*context*/, const ::carla::Number* /*request*/, ::carla::Objects* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetActorLDM(::grpc::ServerContext* context, ::carla::Number* request, ::grpc::ServerAsyncResponseWriter< ::carla::Objects>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_InsertObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_InsertObject() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_InsertObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertObject(::grpc::ServerContext* /*context*/, const ::carla::ObjectIn* /*request*/, ::carla::Number* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInsertObject(::grpc::ServerContext* context, ::carla::ObjectIn* request, ::grpc::ServerAsyncResponseWriter< ::carla::Number>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetCartesian : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetCartesian() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_GetCartesian() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCartesian(::grpc::ServerContext* /*context*/, const ::carla::Vector* /*request*/, ::carla::Vector* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCartesian(::grpc::ServerContext* context, ::carla::Vector* request, ::grpc::ServerAsyncResponseWriter< ::carla::Vector>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetGeo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetGeo() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_GetGeo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGeo(::grpc::ServerContext* /*context*/, const ::carla::Vector* /*request*/, ::carla::Vector* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetGeo(::grpc::ServerContext* context, ::carla::Vector* request, ::grpc::ServerAsyncResponseWriter< ::carla::Vector>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_hasLDM : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_hasLDM() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_hasLDM() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hasLDM(::grpc::ServerContext* /*context*/, const ::carla::Number* /*request*/, ::carla::Boolean* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequesthasLDM(::grpc::ServerContext* context, ::carla::Number* request, ::grpc::ServerAsyncResponseWriter< ::carla::Boolean>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetControl() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_SetControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControl(::grpc::ServerContext* /*context*/, const ::carla::Control* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetControl(::grpc::ServerContext* context, ::carla::Control* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_ExecuteOneTimeStep<WithAsyncMethod_Finish<WithAsyncMethod_GetManagedActorsIds<WithAsyncMethod_GetManagedCAVsIds<WithAsyncMethod_GetManagedActorById<WithAsyncMethod_InsertVehicle<WithAsyncMethod_GetRandomSpawnPoint<WithAsyncMethod_GetActorLDM<WithAsyncMethod_InsertObject<WithAsyncMethod_GetCartesian<WithAsyncMethod_GetGeo<WithAsyncMethod_hasLDM<WithAsyncMethod_SetControl<Service > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_ExecuteOneTimeStep : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExecuteOneTimeStep() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::carla::Boolean>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::carla::Boolean* response) { return this->ExecuteOneTimeStep(context, request, response); }));}
    void SetMessageAllocatorFor_ExecuteOneTimeStep(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::carla::Boolean>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::carla::Boolean>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExecuteOneTimeStep() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteOneTimeStep(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::carla::Boolean* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteOneTimeStep(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::carla::Boolean* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Finish : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Finish() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response) { return this->Finish(context, request, response); }));}
    void SetMessageAllocatorFor_Finish(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Finish() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Finish(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Finish(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetManagedActorsIds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetManagedActorsIds() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::carla::ActorIds>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::carla::ActorIds* response) { return this->GetManagedActorsIds(context, request, response); }));}
    void SetMessageAllocatorFor_GetManagedActorsIds(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::carla::ActorIds>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::carla::ActorIds>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetManagedActorsIds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetManagedActorsIds(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::carla::ActorIds* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetManagedActorsIds(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::carla::ActorIds* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetManagedCAVsIds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetManagedCAVsIds() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::carla::ActorIds>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::carla::ActorIds* response) { return this->GetManagedCAVsIds(context, request, response); }));}
    void SetMessageAllocatorFor_GetManagedCAVsIds(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::carla::ActorIds>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::carla::ActorIds>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetManagedCAVsIds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetManagedCAVsIds(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::carla::ActorIds* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetManagedCAVsIds(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::carla::ActorIds* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetManagedActorById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetManagedActorById() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::carla::Number, ::carla::Vehicle>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::carla::Number* request, ::carla::Vehicle* response) { return this->GetManagedActorById(context, request, response); }));}
    void SetMessageAllocatorFor_GetManagedActorById(
        ::grpc::MessageAllocator< ::carla::Number, ::carla::Vehicle>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::carla::Number, ::carla::Vehicle>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetManagedActorById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetManagedActorById(::grpc::ServerContext* /*context*/, const ::carla::Number* /*request*/, ::carla::Vehicle* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetManagedActorById(
      ::grpc::CallbackServerContext* /*context*/, const ::carla::Number* /*request*/, ::carla::Vehicle* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_InsertVehicle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_InsertVehicle() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::carla::Vehicle, ::carla::Number>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::carla::Vehicle* request, ::carla::Number* response) { return this->InsertVehicle(context, request, response); }));}
    void SetMessageAllocatorFor_InsertVehicle(
        ::grpc::MessageAllocator< ::carla::Vehicle, ::carla::Number>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::carla::Vehicle, ::carla::Number>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_InsertVehicle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertVehicle(::grpc::ServerContext* /*context*/, const ::carla::Vehicle* /*request*/, ::carla::Number* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* InsertVehicle(
      ::grpc::CallbackServerContext* /*context*/, const ::carla::Vehicle* /*request*/, ::carla::Number* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetRandomSpawnPoint : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetRandomSpawnPoint() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::carla::Transform>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::carla::Transform* response) { return this->GetRandomSpawnPoint(context, request, response); }));}
    void SetMessageAllocatorFor_GetRandomSpawnPoint(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::carla::Transform>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::carla::Transform>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetRandomSpawnPoint() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRandomSpawnPoint(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::carla::Transform* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRandomSpawnPoint(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::carla::Transform* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetActorLDM : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetActorLDM() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::carla::Number, ::carla::Objects>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::carla::Number* request, ::carla::Objects* response) { return this->GetActorLDM(context, request, response); }));}
    void SetMessageAllocatorFor_GetActorLDM(
        ::grpc::MessageAllocator< ::carla::Number, ::carla::Objects>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::carla::Number, ::carla::Objects>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetActorLDM() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActorLDM(::grpc::ServerContext* /*context*/, const ::carla::Number* /*request*/, ::carla::Objects* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetActorLDM(
      ::grpc::CallbackServerContext* /*context*/, const ::carla::Number* /*request*/, ::carla::Objects* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_InsertObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_InsertObject() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::carla::ObjectIn, ::carla::Number>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::carla::ObjectIn* request, ::carla::Number* response) { return this->InsertObject(context, request, response); }));}
    void SetMessageAllocatorFor_InsertObject(
        ::grpc::MessageAllocator< ::carla::ObjectIn, ::carla::Number>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::carla::ObjectIn, ::carla::Number>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_InsertObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertObject(::grpc::ServerContext* /*context*/, const ::carla::ObjectIn* /*request*/, ::carla::Number* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* InsertObject(
      ::grpc::CallbackServerContext* /*context*/, const ::carla::ObjectIn* /*request*/, ::carla::Number* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetCartesian : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetCartesian() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::carla::Vector, ::carla::Vector>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::carla::Vector* request, ::carla::Vector* response) { return this->GetCartesian(context, request, response); }));}
    void SetMessageAllocatorFor_GetCartesian(
        ::grpc::MessageAllocator< ::carla::Vector, ::carla::Vector>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::carla::Vector, ::carla::Vector>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetCartesian() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCartesian(::grpc::ServerContext* /*context*/, const ::carla::Vector* /*request*/, ::carla::Vector* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCartesian(
      ::grpc::CallbackServerContext* /*context*/, const ::carla::Vector* /*request*/, ::carla::Vector* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetGeo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetGeo() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::carla::Vector, ::carla::Vector>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::carla::Vector* request, ::carla::Vector* response) { return this->GetGeo(context, request, response); }));}
    void SetMessageAllocatorFor_GetGeo(
        ::grpc::MessageAllocator< ::carla::Vector, ::carla::Vector>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::carla::Vector, ::carla::Vector>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetGeo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGeo(::grpc::ServerContext* /*context*/, const ::carla::Vector* /*request*/, ::carla::Vector* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetGeo(
      ::grpc::CallbackServerContext* /*context*/, const ::carla::Vector* /*request*/, ::carla::Vector* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_hasLDM : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_hasLDM() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::carla::Number, ::carla::Boolean>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::carla::Number* request, ::carla::Boolean* response) { return this->hasLDM(context, request, response); }));}
    void SetMessageAllocatorFor_hasLDM(
        ::grpc::MessageAllocator< ::carla::Number, ::carla::Boolean>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::carla::Number, ::carla::Boolean>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_hasLDM() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hasLDM(::grpc::ServerContext* /*context*/, const ::carla::Number* /*request*/, ::carla::Boolean* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* hasLDM(
      ::grpc::CallbackServerContext* /*context*/, const ::carla::Number* /*request*/, ::carla::Boolean* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetControl() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::carla::Control, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::carla::Control* request, ::google::protobuf::Empty* response) { return this->SetControl(context, request, response); }));}
    void SetMessageAllocatorFor_SetControl(
        ::grpc::MessageAllocator< ::carla::Control, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::carla::Control, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControl(::grpc::ServerContext* /*context*/, const ::carla::Control* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetControl(
      ::grpc::CallbackServerContext* /*context*/, const ::carla::Control* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_ExecuteOneTimeStep<WithCallbackMethod_Finish<WithCallbackMethod_GetManagedActorsIds<WithCallbackMethod_GetManagedCAVsIds<WithCallbackMethod_GetManagedActorById<WithCallbackMethod_InsertVehicle<WithCallbackMethod_GetRandomSpawnPoint<WithCallbackMethod_GetActorLDM<WithCallbackMethod_InsertObject<WithCallbackMethod_GetCartesian<WithCallbackMethod_GetGeo<WithCallbackMethod_hasLDM<WithCallbackMethod_SetControl<Service > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_ExecuteOneTimeStep : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExecuteOneTimeStep() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_ExecuteOneTimeStep() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteOneTimeStep(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::carla::Boolean* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Finish : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Finish() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_Finish() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Finish(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetManagedActorsIds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetManagedActorsIds() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetManagedActorsIds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetManagedActorsIds(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::carla::ActorIds* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetManagedCAVsIds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetManagedCAVsIds() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_GetManagedCAVsIds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetManagedCAVsIds(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::carla::ActorIds* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetManagedActorById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetManagedActorById() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_GetManagedActorById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetManagedActorById(::grpc::ServerContext* /*context*/, const ::carla::Number* /*request*/, ::carla::Vehicle* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_InsertVehicle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_InsertVehicle() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_InsertVehicle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertVehicle(::grpc::ServerContext* /*context*/, const ::carla::Vehicle* /*request*/, ::carla::Number* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRandomSpawnPoint : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetRandomSpawnPoint() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_GetRandomSpawnPoint() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRandomSpawnPoint(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::carla::Transform* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetActorLDM : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetActorLDM() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_GetActorLDM() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActorLDM(::grpc::ServerContext* /*context*/, const ::carla::Number* /*request*/, ::carla::Objects* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_InsertObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_InsertObject() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_InsertObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertObject(::grpc::ServerContext* /*context*/, const ::carla::ObjectIn* /*request*/, ::carla::Number* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetCartesian : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetCartesian() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_GetCartesian() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCartesian(::grpc::ServerContext* /*context*/, const ::carla::Vector* /*request*/, ::carla::Vector* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetGeo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetGeo() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_GetGeo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGeo(::grpc::ServerContext* /*context*/, const ::carla::Vector* /*request*/, ::carla::Vector* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_hasLDM : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_hasLDM() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_hasLDM() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hasLDM(::grpc::ServerContext* /*context*/, const ::carla::Number* /*request*/, ::carla::Boolean* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetControl() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_SetControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControl(::grpc::ServerContext* /*context*/, const ::carla::Control* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExecuteOneTimeStep : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExecuteOneTimeStep() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_ExecuteOneTimeStep() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteOneTimeStep(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::carla::Boolean* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExecuteOneTimeStep(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Finish : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Finish() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_Finish() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Finish(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFinish(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetManagedActorsIds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetManagedActorsIds() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetManagedActorsIds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetManagedActorsIds(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::carla::ActorIds* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetManagedActorsIds(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetManagedCAVsIds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetManagedCAVsIds() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_GetManagedCAVsIds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetManagedCAVsIds(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::carla::ActorIds* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetManagedCAVsIds(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetManagedActorById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetManagedActorById() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_GetManagedActorById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetManagedActorById(::grpc::ServerContext* /*context*/, const ::carla::Number* /*request*/, ::carla::Vehicle* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetManagedActorById(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_InsertVehicle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_InsertVehicle() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_InsertVehicle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertVehicle(::grpc::ServerContext* /*context*/, const ::carla::Vehicle* /*request*/, ::carla::Number* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInsertVehicle(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetRandomSpawnPoint : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetRandomSpawnPoint() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_GetRandomSpawnPoint() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRandomSpawnPoint(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::carla::Transform* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRandomSpawnPoint(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetActorLDM : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetActorLDM() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_GetActorLDM() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActorLDM(::grpc::ServerContext* /*context*/, const ::carla::Number* /*request*/, ::carla::Objects* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetActorLDM(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_InsertObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_InsertObject() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_InsertObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertObject(::grpc::ServerContext* /*context*/, const ::carla::ObjectIn* /*request*/, ::carla::Number* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInsertObject(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetCartesian : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetCartesian() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_GetCartesian() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCartesian(::grpc::ServerContext* /*context*/, const ::carla::Vector* /*request*/, ::carla::Vector* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCartesian(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetGeo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetGeo() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_GetGeo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGeo(::grpc::ServerContext* /*context*/, const ::carla::Vector* /*request*/, ::carla::Vector* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetGeo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_hasLDM : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_hasLDM() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_hasLDM() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hasLDM(::grpc::ServerContext* /*context*/, const ::carla::Number* /*request*/, ::carla::Boolean* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequesthasLDM(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetControl() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_SetControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControl(::grpc::ServerContext* /*context*/, const ::carla::Control* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetControl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExecuteOneTimeStep : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExecuteOneTimeStep() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExecuteOneTimeStep(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExecuteOneTimeStep() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExecuteOneTimeStep(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::carla::Boolean* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExecuteOneTimeStep(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Finish : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Finish() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Finish(context, request, response); }));
    }
    ~WithRawCallbackMethod_Finish() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Finish(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Finish(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetManagedActorsIds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetManagedActorsIds() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetManagedActorsIds(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetManagedActorsIds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetManagedActorsIds(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::carla::ActorIds* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetManagedActorsIds(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetManagedCAVsIds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetManagedCAVsIds() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetManagedCAVsIds(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetManagedCAVsIds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetManagedCAVsIds(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::carla::ActorIds* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetManagedCAVsIds(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetManagedActorById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetManagedActorById() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetManagedActorById(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetManagedActorById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetManagedActorById(::grpc::ServerContext* /*context*/, const ::carla::Number* /*request*/, ::carla::Vehicle* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetManagedActorById(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_InsertVehicle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_InsertVehicle() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->InsertVehicle(context, request, response); }));
    }
    ~WithRawCallbackMethod_InsertVehicle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertVehicle(::grpc::ServerContext* /*context*/, const ::carla::Vehicle* /*request*/, ::carla::Number* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* InsertVehicle(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetRandomSpawnPoint : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetRandomSpawnPoint() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetRandomSpawnPoint(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetRandomSpawnPoint() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRandomSpawnPoint(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::carla::Transform* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRandomSpawnPoint(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetActorLDM : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetActorLDM() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetActorLDM(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetActorLDM() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActorLDM(::grpc::ServerContext* /*context*/, const ::carla::Number* /*request*/, ::carla::Objects* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetActorLDM(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_InsertObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_InsertObject() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->InsertObject(context, request, response); }));
    }
    ~WithRawCallbackMethod_InsertObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InsertObject(::grpc::ServerContext* /*context*/, const ::carla::ObjectIn* /*request*/, ::carla::Number* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* InsertObject(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetCartesian : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetCartesian() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetCartesian(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetCartesian() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCartesian(::grpc::ServerContext* /*context*/, const ::carla::Vector* /*request*/, ::carla::Vector* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCartesian(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetGeo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetGeo() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetGeo(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetGeo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGeo(::grpc::ServerContext* /*context*/, const ::carla::Vector* /*request*/, ::carla::Vector* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetGeo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_hasLDM : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_hasLDM() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->hasLDM(context, request, response); }));
    }
    ~WithRawCallbackMethod_hasLDM() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hasLDM(::grpc::ServerContext* /*context*/, const ::carla::Number* /*request*/, ::carla::Boolean* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* hasLDM(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetControl() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetControl(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControl(::grpc::ServerContext* /*context*/, const ::carla::Control* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetControl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExecuteOneTimeStep : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExecuteOneTimeStep() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::carla::Boolean>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::carla::Boolean>* streamer) {
                       return this->StreamedExecuteOneTimeStep(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExecuteOneTimeStep() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExecuteOneTimeStep(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::carla::Boolean* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExecuteOneTimeStep(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::carla::Boolean>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Finish : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Finish() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedFinish(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Finish() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Finish(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFinish(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetManagedActorsIds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetManagedActorsIds() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::carla::ActorIds>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::carla::ActorIds>* streamer) {
                       return this->StreamedGetManagedActorsIds(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetManagedActorsIds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetManagedActorsIds(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::carla::ActorIds* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetManagedActorsIds(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::carla::ActorIds>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetManagedCAVsIds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetManagedCAVsIds() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::carla::ActorIds>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::carla::ActorIds>* streamer) {
                       return this->StreamedGetManagedCAVsIds(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetManagedCAVsIds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetManagedCAVsIds(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::carla::ActorIds* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetManagedCAVsIds(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::carla::ActorIds>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetManagedActorById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetManagedActorById() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::carla::Number, ::carla::Vehicle>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::carla::Number, ::carla::Vehicle>* streamer) {
                       return this->StreamedGetManagedActorById(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetManagedActorById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetManagedActorById(::grpc::ServerContext* /*context*/, const ::carla::Number* /*request*/, ::carla::Vehicle* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetManagedActorById(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::carla::Number,::carla::Vehicle>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_InsertVehicle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_InsertVehicle() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::carla::Vehicle, ::carla::Number>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::carla::Vehicle, ::carla::Number>* streamer) {
                       return this->StreamedInsertVehicle(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_InsertVehicle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status InsertVehicle(::grpc::ServerContext* /*context*/, const ::carla::Vehicle* /*request*/, ::carla::Number* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInsertVehicle(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::carla::Vehicle,::carla::Number>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRandomSpawnPoint : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetRandomSpawnPoint() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::carla::Transform>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::carla::Transform>* streamer) {
                       return this->StreamedGetRandomSpawnPoint(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetRandomSpawnPoint() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRandomSpawnPoint(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::carla::Transform* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRandomSpawnPoint(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::carla::Transform>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetActorLDM : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetActorLDM() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::carla::Number, ::carla::Objects>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::carla::Number, ::carla::Objects>* streamer) {
                       return this->StreamedGetActorLDM(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetActorLDM() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetActorLDM(::grpc::ServerContext* /*context*/, const ::carla::Number* /*request*/, ::carla::Objects* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetActorLDM(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::carla::Number,::carla::Objects>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_InsertObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_InsertObject() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::carla::ObjectIn, ::carla::Number>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::carla::ObjectIn, ::carla::Number>* streamer) {
                       return this->StreamedInsertObject(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_InsertObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status InsertObject(::grpc::ServerContext* /*context*/, const ::carla::ObjectIn* /*request*/, ::carla::Number* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInsertObject(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::carla::ObjectIn,::carla::Number>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetCartesian : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetCartesian() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::carla::Vector, ::carla::Vector>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::carla::Vector, ::carla::Vector>* streamer) {
                       return this->StreamedGetCartesian(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetCartesian() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetCartesian(::grpc::ServerContext* /*context*/, const ::carla::Vector* /*request*/, ::carla::Vector* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetCartesian(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::carla::Vector,::carla::Vector>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetGeo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetGeo() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::carla::Vector, ::carla::Vector>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::carla::Vector, ::carla::Vector>* streamer) {
                       return this->StreamedGetGeo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetGeo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetGeo(::grpc::ServerContext* /*context*/, const ::carla::Vector* /*request*/, ::carla::Vector* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetGeo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::carla::Vector,::carla::Vector>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_hasLDM : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_hasLDM() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::carla::Number, ::carla::Boolean>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::carla::Number, ::carla::Boolean>* streamer) {
                       return this->StreamedhasLDM(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_hasLDM() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status hasLDM(::grpc::ServerContext* /*context*/, const ::carla::Number* /*request*/, ::carla::Boolean* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedhasLDM(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::carla::Number,::carla::Boolean>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetControl() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::carla::Control, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::carla::Control, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSetControl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetControl(::grpc::ServerContext* /*context*/, const ::carla::Control* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetControl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::carla::Control,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_ExecuteOneTimeStep<WithStreamedUnaryMethod_Finish<WithStreamedUnaryMethod_GetManagedActorsIds<WithStreamedUnaryMethod_GetManagedCAVsIds<WithStreamedUnaryMethod_GetManagedActorById<WithStreamedUnaryMethod_InsertVehicle<WithStreamedUnaryMethod_GetRandomSpawnPoint<WithStreamedUnaryMethod_GetActorLDM<WithStreamedUnaryMethod_InsertObject<WithStreamedUnaryMethod_GetCartesian<WithStreamedUnaryMethod_GetGeo<WithStreamedUnaryMethod_hasLDM<WithStreamedUnaryMethod_SetControl<Service > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_ExecuteOneTimeStep<WithStreamedUnaryMethod_Finish<WithStreamedUnaryMethod_GetManagedActorsIds<WithStreamedUnaryMethod_GetManagedCAVsIds<WithStreamedUnaryMethod_GetManagedActorById<WithStreamedUnaryMethod_InsertVehicle<WithStreamedUnaryMethod_GetRandomSpawnPoint<WithStreamedUnaryMethod_GetActorLDM<WithStreamedUnaryMethod_InsertObject<WithStreamedUnaryMethod_GetCartesian<WithStreamedUnaryMethod_GetGeo<WithStreamedUnaryMethod_hasLDM<WithStreamedUnaryMethod_SetControl<Service > > > > > > > > > > > > > StreamedService;
};

}  // namespace carla


#endif  // GRPC_carla_2eproto__INCLUDED
